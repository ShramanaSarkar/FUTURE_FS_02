{"ast":null,"code":"var _jsxFileName = \"D:\\\\GITHUB PROJECTS\\\\Projects\\\\Future Interns\\\\FUTURE_FS_02\\\\src\\\\components\\\\Forecast.js\";\nimport React from \"react\";\nimport { Card, Typography, Grid } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Forecast = ({\n  forecast\n}) => {\n  if (!Array.isArray(forecast) || forecast.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      textAlign: \"center\",\n      children: \"No forecast data available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        fontWeight: \"bold\",\n        marginTop: 2\n      },\n      children: \"5-Day Forecast\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      children: forecast.map((day, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 2,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            textAlign: \"center\",\n            padding: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"subtitle1\",\n            children: day.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${day.icon}.png`,\n            alt: day.condition,\n            style: {\n              width: 50,\n              height: 50\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Temp: \", day.temp, \"\\xB0C\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: [\"Condition: \", day.condition]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 25\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_c = Forecast;\nexport default Forecast;\nvar _c;\n$RefreshReg$(_c, \"Forecast\");","map":{"version":3,"names":["React","Card","Typography","Grid","jsxDEV","_jsxDEV","Forecast","forecast","Array","isArray","length","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","sx","fontWeight","marginTop","container","spacing","map","day","index","item","xs","sm","padding","date","src","icon","alt","condition","style","width","height","temp","_c","$RefreshReg$"],"sources":["D:/GITHUB PROJECTS/Projects/Future Interns/FUTURE_FS_02/src/components/Forecast.js"],"sourcesContent":["import React from \"react\";\nimport { Card, Typography, Grid } from \"@mui/material\";\n\nconst Forecast = ({ forecast }) => {\n    if (!Array.isArray(forecast) || forecast.length === 0) {\n        return <Typography textAlign={\"center\"}>No forecast data available.</Typography>;\n    }\n\n    return (\n        <div>\n            <Typography variant=\"h6\" sx={{ fontWeight: \"bold\", marginTop: 2 }}>\n                5-Day Forecast\n            </Typography>\n            <Grid container spacing={2}>\n                {forecast.map((day, index) => (\n                    <Grid item xs={12} sm={2} key={index}>\n                        <Card sx={{ textAlign: \"center\", padding: 2 }}>\n                            <Typography variant=\"subtitle1\">{day.date}</Typography>\n                            <img \n                                src={`https://openweathermap.org/img/wn/${day.icon}.png`} \n                                alt={day.condition} \n                                style={{ width: 50, height: 50 }} \n                            />\n                            <Typography>Temp: {day.temp}Â°C</Typography>\n                            <Typography>Condition: {day.condition}</Typography>\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n};\n\nexport default Forecast;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,EAAEC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAC/B,IAAI,CAACC,KAAK,CAACC,OAAO,CAACF,QAAQ,CAAC,IAAIA,QAAQ,CAACG,MAAM,KAAK,CAAC,EAAE;IACnD,oBAAOL,OAAA,CAACH,UAAU;MAACS,SAAS,EAAE,QAAS;MAAAC,QAAA,EAAC;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC;EACpF;EAEA,oBACIX,OAAA;IAAAO,QAAA,gBACIP,OAAA,CAACH,UAAU;MAACe,OAAO,EAAC,IAAI;MAACC,EAAE,EAAE;QAAEC,UAAU,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAE,CAAE;MAAAR,QAAA,EAAC;IAEnE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAY,CAAC,eACbX,OAAA,CAACF,IAAI;MAACkB,SAAS;MAACC,OAAO,EAAE,CAAE;MAAAV,QAAA,EACtBL,QAAQ,CAACgB,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACrBpB,OAAA,CAACF,IAAI;QAACuB,IAAI;QAACC,EAAE,EAAE,EAAG;QAACC,EAAE,EAAE,CAAE;QAAAhB,QAAA,eACrBP,OAAA,CAACJ,IAAI;UAACiB,EAAE,EAAE;YAAEP,SAAS,EAAE,QAAQ;YAAEkB,OAAO,EAAE;UAAE,CAAE;UAAAjB,QAAA,gBAC1CP,OAAA,CAACH,UAAU;YAACe,OAAO,EAAC,WAAW;YAAAL,QAAA,EAAEY,GAAG,CAACM;UAAI;YAAAjB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC,eACvDX,OAAA;YACI0B,GAAG,EAAE,qCAAqCP,GAAG,CAACQ,IAAI,MAAO;YACzDC,GAAG,EAAET,GAAG,CAACU,SAAU;YACnBC,KAAK,EAAE;cAAEC,KAAK,EAAE,EAAE;cAAEC,MAAM,EAAE;YAAG;UAAE;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC,eACFX,OAAA,CAACH,UAAU;YAAAU,QAAA,GAAC,QAAM,EAACY,GAAG,CAACc,IAAI,EAAC,OAAE;UAAA;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAY,CAAC,eAC3CX,OAAA,CAACH,UAAU;YAAAU,QAAA,GAAC,aAAW,EAACY,GAAG,CAACU,SAAS;UAAA;YAAArB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAa,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD;MAAC,GAVoBS,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAW9B,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAACuB,EAAA,GA5BIjC,QAAQ;AA8Bd,eAAeA,QAAQ;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}